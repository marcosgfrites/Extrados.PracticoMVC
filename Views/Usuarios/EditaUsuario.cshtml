@model PracticoMVC.Models.UsuarioModeloEditar

@{
    ViewBag.Title = "Edición de Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        @if (ViewBag.Message != null)
        {
            <div class="row" style="margin-top:2%;">
                <div class="col-md-8">
                    <div class="@ViewBag.Class" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        @ViewBag.Message
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-lg-12">
                <button class="btn btn-primary btn-warning" title="Volver atrás" style="position: absolute; right: 0;" onclick='window.location="@Url.Action("ConsultaUsuarios","Usuarios")"' type="button"><i class="fas fa-arrow-alt-circle-left"></i></button>
                <br />
                <br />
            </div>
        </div>
        <div class="card">
            <div class="card-header">
                <h4> Edición de Usuarios </h4>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("EditaUsuario", "Usuarios", FormMethod.Post))
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <form action="" method="post" enctype="multipart/form-data" class="form-horizontal">
                        <br />
                        <div class="row form-group">
                            <div class="col col-md-3">
                                @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "form-control-label" })
                            </div>
                            <div class="col-12 col-md-9">
                                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @placeholder = "INGRESE UN NICK DE USUARIO..." } })
                                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-group">
                            <div class="col col-md-3">
                                @Html.LabelFor(model => model.IdRol, htmlAttributes: new { @class = "form-control-label" })
                            </div>
                            <div class="col-12 col-md-9">
                                <select name="IdRol" id="IdRol" class="form-control" readonly="readonly">
                                    @if (ViewBag.Exito != null)  //si fuese null, significa que los datos deben completarse. Sino, significa que ya interactuamos con la app y se obtuvo algún resultado
                                    {
                                        <option value="">AQUÍ DEBE AUTOCOMPLETARSE EL ROL DE USUARIO...</option>
                                    }
                                    else
                                    {
                                        <option value="">SELECCIONE UN ROL DE USUARIO...</option>
                                        foreach (var roles in ViewBag.ListaRoles)
                                        {
                                            if (Model.IdRol == roles.Id)
                                            {
                                                <option value="@roles.Id" selected>@roles.Descripcion</option>
                                            }
                                            else
                                            {
                                                <option value="@roles.Id">@roles.Descripcion</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.IdRol, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-group">
                            <div class="col col-md-3">
                                @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "form-control-label" })
                            </div>
                            <div class="col-12 col-md-9">
                                @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new {@class = "form-control", @placeholder = "AQUÍ DEBE AUTOCOMPLETARSE EL NICK DE USUARIO..." } })
                                @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-group">
                            <div class="col col-md-3">
                                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "form-control-label" })
                            </div>
                            <div class="col-12 col-md-9">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Aquí debe autocompletarse el nombre de usuario...", @style = "text-transform:uppercase;", @onkeyup = "javascript:this.value=this.value.toUpperCase()" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-group">
                            <div class="col col-md-3">
                                @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "form-control-label" })
                            </div>
                            <div class="col-12 col-md-9">
                                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", @placeholder = "Aquí debe autocompletarse el apellido de usuario...", @style = "text-transform:uppercase;", @onkeyup = "javascript:this.value=this.value.toUpperCase()" } })
                                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-group">
                            <div class="col col-md-3">
                                @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "form-control-label" })
                            </div>
                            <div class="col-12 col-md-9">
                                <select name="Activo" id="Activo" class="form-control">
                                    @if (ViewBag.Exito != null) //si fuese null, significa que los datos deben completarse. Sino, significa que ya interactuamos con la app y se obtuvo algún resultado
                                    {
                                        <option value="">AQUÍ DEBE AUTOCOMPLETARSE EL ESTADO DE PRODUCTO...</option>
                                    }
                                    else
                                    {
                                        <option value="1">SELECCIONE EL ESTADO DE USUARIO...</option>
                                        if (Model.Activo == 1)
                                        {
                                            <option value="1" selected>HABILITADO</option>
                                            <option value="0">DESHABILITADO</option>
                                        }
                                        else
                                        {
                                            if (Model.Activo == 0)
                                            {
                                                <option value="1">HABILITADO</option>
                                                <option value="0" selected>DESHABILITADO</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row form-group">
                            <div class="col-lg-12">
                                <input type="submit" style="margin-left:45%" class="btn btn-primary" name="Modificar" id="Modificar" value="Modificar" />
                            </div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
</div>
